{"ast":null,"code":"var _jsxFileName = \"/home/phuong/Documents/FE-Practice/reactjs-cinema/src/pages/ReadPageV3.js\";\nimport React from 'react';\nimport { Table, Button, Row, Col, Modal, Form } from 'react-bootstrap';\n\nclass ReadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = () => {\n      this.state = {\n        itemName: ['name', 'rating', 'time'],\n        movies: [],\n        status: {}\n      };\n    };\n\n    this.setStatus = (key, value) => {\n      let status = { ...this.state.status\n      };\n      console.log(key, value);\n      key.forEach((eachKey, index) => {\n        status[eachKey] = value[index];\n      });\n      this.setState({ ...this.state,\n        status\n      });\n    };\n\n    this.handleAction = (actionName, index) => {\n      let isEdit = true;\n\n      if (actionName === 'remove') {\n        isEdit = false;\n      }\n\n      let isShow = this.state.status.isShow;\n\n      if (isShow === null) {\n        isShow = false;\n      }\n\n      let selectedMovie = this.state.movies[index];\n      this.setStatus(['isEdit', 'isShow', 'selectedMovie'], [isEdit, !isShow, selectedMovie]);\n    };\n\n    this.handleShow = () => {\n      let isShow = this.state.status.isShow;\n\n      if (isShow === null) {\n        isShow = false;\n      }\n\n      this.setStatus(['isShow'], [!isShow]);\n    };\n\n    this.handleShowConfirm = () => {\n      this.setState({\n        status: { ...this.state.status,\n          isShowConfirm: !this.state.status.isShowConfirm\n        }\n      });\n    };\n\n    this.updadteMovies = movieId => {\n      let moviesNew = [];\n      this.state.movies.forEach(function (item) {\n        if (item._id !== movieId) {\n          moviesNew.push(item);\n        }\n      });\n      console.log(moviesNew);\n      this.setState({\n        movies: moviesNew\n      });\n    };\n\n    this.handleConfirm = () => {\n      let action = this.state.status.isEdit ? 'update' : 'delete';\n      let movie_id = this.state.status.movie._id;\n      let action_url = `http://localhost:5000/movie/${action}/${movie_id}`;\n      fetch(action_url, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: this.state.status.isEdit ? 'POST' : 'DELETE'\n      }).then(res => res.json()).then(res => this.updadteMovies(res.data._id));\n      this.handleShow();\n    };\n\n    this.initialState();\n    this.handleShow = this.handleShow.bind(this); //this.handleShowConfirm = this.handleShowConfirm.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/movie/all').then(res => res.json()).then(res => this.setState({\n      movies: res.data\n    }));\n  }\n\n  render() {\n    const tableHeader = this.props.headers.map(item => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, item);\n    });\n\n    const ActionModal = () => {\n      return /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.status.isShow,\n        onHide: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, this.state.status.isEdit ? 'Edit' : 'Delete'), \" movie\")), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }, \"Code\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"label\",\n        value: this.state.status.movie._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      })))), this.state.itemName.map(item => {\n        return /*#__PURE__*/React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          className: \"col-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 49\n          }\n        }, item[0].toUpperCase() + item.substr(1))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          value: this.state.status.movie[item],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 49\n          }\n        }))));\n      }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        variant: \"danger\",\n        onClick: this.handleConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, \"Confirm\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        variant: \"primary\",\n        onClick: this.handleShow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 33\n        }\n      }, \"Cancel\")))));\n    };\n\n    const tableBody = this.state.movies.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }, item.rating), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        variant: \"primary\",\n        size: \"sm\",\n        onClick: () => this.handleAction('edit', index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 33\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        variant: \"danger\",\n        size: \"sm\",\n        onClick: () => this.handleAction('remove', index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      }, \"Remove\")))));\n    });\n    return /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, tableHeader)), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, tableBody, ActionModal));\n  }\n\n}\n\nexport default ReadPage;","map":{"version":3,"sources":["/home/phuong/Documents/FE-Practice/reactjs-cinema/src/pages/ReadPageV3.js"],"names":["React","Table","Button","Row","Col","Modal","Form","ReadPage","Component","constructor","props","initialState","state","itemName","movies","status","setStatus","key","value","console","log","forEach","eachKey","index","setState","handleAction","actionName","isEdit","isShow","selectedMovie","handleShow","handleShowConfirm","isShowConfirm","updadteMovies","movieId","moviesNew","item","_id","push","handleConfirm","action","movie_id","movie","action_url","fetch","headers","method","then","res","json","data","bind","componentDidMount","render","tableHeader","map","ActionModal","toUpperCase","substr","tableBody","name","rating"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, Button, Row, Col, Modal, Form} from 'react-bootstrap';\n\nclass ReadPage extends React.Component{\n    constructor(props){\n        super(props);\n        this.initialState();\n        this.handleShow = this.handleShow.bind(this);\n        //this.handleShowConfirm = this.handleShowConfirm.bind(this);\n    }\n\n    initialState = () => {\n        this.state = {\n            itemName : ['name', 'rating', 'time'],\n            movies: [],\n            status: {}\n        };\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:5000/movie/all')\n            .then(res => res.json())\n            .then(res => this.setState({movies: res.data}))\n    }\n\n    setStatus = (key, value) => {\n        let status = {...this.state.status};\n        console.log(key, value);\n        key.forEach((eachKey, index)=>{\n            status[eachKey] = value[index];\n        })\n        this.setState({\n            ...this.state,\n            status\n        })\n    }\n\n    handleAction = (actionName, index) => {\n        let isEdit = true;\n        if (actionName === 'remove'){\n            isEdit = false;\n        }\n        let isShow = this.state.status.isShow;\n        if (isShow === null){\n            isShow = false;\n        } \n        let selectedMovie = this.state.movies[index];\n        this.setStatus(['isEdit', 'isShow', 'selectedMovie'], [isEdit, !isShow, selectedMovie]);\n    }\n\n    handleShow = () => {\n        let isShow = this.state.status.isShow;\n        if (isShow === null){\n            isShow = false;\n        } \n        this.setStatus(['isShow'], [!isShow])\n    }\n\n    handleShowConfirm = () => {\n        this.setState({\n            status: {\n                ...this.state.status,\n                isShowConfirm: !this.state.status.isShowConfirm\n            }\n        })\n    }\n\n    updadteMovies = (movieId) => {\n        let moviesNew = [];\n        this.state.movies.forEach(function(item){\n            if (item._id !== movieId){\n                moviesNew.push(item);\n            }\n        })\n        console.log(moviesNew);\n        this.setState({movies: moviesNew});\n    }\n\n    handleConfirm = () => {\n        let action = this.state.status.isEdit ? 'update' : 'delete';\n        let movie_id = this.state.status.movie._id;\n        let action_url = `http://localhost:5000/movie/${action}/${movie_id}`;\n        fetch(action_url, {\n            headers: {'Content-Type':'application/json'},\n            method: this.state.status.isEdit ? 'POST' : 'DELETE'\n        })\n            .then(res => res.json())\n            .then(res => this.updadteMovies(res.data._id))\n        this.handleShow();\n    }\n\n    render(){\n        const tableHeader = this.props.headers.map((item)=>{\n            return(\n                <th>{item}</th>\n            )\n        });\n        \n        const ActionModal = () => {\n            return(\n                <Modal show={this.state.status.isShow} onHide={this.handleShow}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <b variant=\"danger\">{this.state.status.isEdit ? 'Edit' : 'Delete'}</b> movie\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group>\n                                <Row>\n                                    <Col className='col-2'>\n                                        <Form.Label>Code</Form.Label>\n                                    </Col>\n                                    <Col>\n                                        <Form.Control type='label' value={this.state.status.movie._id}/>\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                            {this.state.itemName.map((item)=>{\n                                return(\n                                    <Form.Group>\n                                        <Row>\n                                            <Col className='col-2'>\n                                                <Form.Label>{item[0].toUpperCase() + item.substr(1,)}</Form.Label>\n                                            </Col>\n                                            <Col>\n                                                <Form.Control type='text' value={this.state.status.movie[item]}/>\n                                            </Col>\n                                        </Row>\n                                    </Form.Group>\n                                )\n                            })}\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row className=\"col-12\">\n                            <Col>\n                                <Button block variant=\"danger\" onClick={this.handleConfirm}>Confirm</Button>\n                            </Col>\n                            <Col>\n                                <Button block variant=\"primary\" onClick={this.handleShow}>Cancel</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            )\n        }\n        \n        const tableBody = this.state.movies.map((item, index)=>{\n            return(\n                <tr>\n                    <td>{index+1}</td>\n                    <td>{item.name}</td>\n                    <td>{item.rating}</td>\n                    <td>\n                        <Row>\n                            <Col>\n                                <Button block variant=\"primary\" size='sm' onClick={()=>this.handleAction('edit', index)}>Edit</Button>\n                            </Col>\n                            <Col>\n                                <Button block variant=\"danger\" size='sm' onClick={()=>this.handleAction('remove', index)}>Remove</Button>\n                            </Col>\n                        </Row>\n                    </td>\n                </tr>\n            )\n        });\n\n        return(\n            <Table responsive hover>\n                <thead>\n                    <tr>{tableHeader}</tr>\n                </thead>\n                <tbody>\n                    {tableBody}\n                    {ActionModal}\n                </tbody>\n            </Table>\n        )\n    }\n}\n\nexport default ReadPage;"]},"metadata":{},"sourceType":"module"}