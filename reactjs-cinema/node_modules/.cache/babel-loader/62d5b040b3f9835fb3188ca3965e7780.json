{"ast":null,"code":"var _jsxFileName = \"/home/phuong/Documents/FE-Practice/reactjs-cinema/src/pages/ReadPage.js\";\nimport React from 'react';\nimport { Table, Button, Row, Col, Modal, Form } from 'react-bootstrap';\n\nclass ReadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = (actionName, index) => {\n      let isEdit = true;\n\n      if (actionName === 'remove') {\n        isEdit = false;\n      }\n\n      this.setState({\n        status: {\n          isShow: !this.state.status.isShow,\n          isEdit: isEdit,\n          movie: this.state.movies[index]\n        }\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        status: { ...this.state.status,\n          isShow: !this.state.status.isShow\n        }\n      });\n    };\n\n    this.handleShowConfirm = () => {\n      this.setState({\n        status: { ...this.state.status,\n          isShowConfirm: !this.state.status.isShowConfirm\n        }\n      });\n    };\n\n    this.updadteMovies = movieId => {\n      let moviesNew = [];\n      this.state.movies.forEach(function (item) {\n        if (item._id !== movieId) {\n          moviesNew.push(item);\n        }\n      });\n      console.log(moviesNew);\n      this.setState({\n        movies: moviesNew\n      });\n    };\n\n    this.handleConfirm = () => {\n      let action = this.state.status.isEdit ? 'update' : 'delete';\n      let movie_id = this.state.status.movie._id;\n      let action_url = `http://localhost:5000/movie/${action}/${movie_id}`;\n      fetch(action_url, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: this.state.status.isEdit ? 'POST' : 'DELETE'\n      }).then(res => res.json()).then(res => this.updadteMovies(res.data._id));\n      this.handleShow();\n    };\n\n    this.state = {\n      itemName: ['name', 'rating', 'time'],\n      movies: [],\n      status: {\n        isShow: false,\n        isShowConfirm: false,\n        isEdit: true,\n        movie: {}\n      }\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleShowConfirm = this.handleShowConfirm.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/movie/all').then(res => res.json()).then(res => this.setState({\n      movies: res.data\n    }));\n  }\n\n  render() {\n    const tableHeader = this.props.headers.map(item => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, item);\n    });\n    const ActionModal = /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.status.isShow,\n      onHide: this.handleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, this.state.status.isEdit ? 'Edit' : 'Delete'), \" movie\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, \"Code\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"label\",\n      value: this.state.status.movie._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    })))), this.state.itemName.map(item => {\n      return /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      }, item[0].toUpperCase() + item.substr(1))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.status.movie[item],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 45\n        }\n      }))));\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      variant: \"danger\",\n      onClick: this.handleConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"Confirm\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      variant: \"primary\",\n      onClick: this.handleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Cancel\")))));\n    const ActionConfirm = /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.status.isShowConfirm,\n      onHide: this.handleShowConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    });\n    const tableBody = this.state.movies.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, item.rating), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        variant: \"primary\",\n        size: \"sm\",\n        onClick: () => this.handleAction('edit', index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        variant: \"danger\",\n        size: \"sm\",\n        onClick: () => this.handleAction('remove', index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 33\n        }\n      }, \"Remove\")))));\n    });\n    return /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, tableHeader)), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, tableBody, ActionModal, ActionConfirm));\n  }\n\n}\n\nexport default ReadPage;","map":{"version":3,"sources":["/home/phuong/Documents/FE-Practice/reactjs-cinema/src/pages/ReadPage.js"],"names":["React","Table","Button","Row","Col","Modal","Form","ReadPage","Component","constructor","props","handleAction","actionName","index","isEdit","setState","status","isShow","state","movie","movies","handleShow","handleShowConfirm","isShowConfirm","updadteMovies","movieId","moviesNew","forEach","item","_id","push","console","log","handleConfirm","action","movie_id","action_url","fetch","headers","method","then","res","json","data","itemName","bind","componentDidMount","render","tableHeader","map","ActionModal","toUpperCase","substr","ActionConfirm","tableBody","name","rating"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, Button, Row, Col, Modal, Form} from 'react-bootstrap';\n\nclass ReadPage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            itemName : ['name', 'rating', 'time'],\n            movies: [],\n            status: {\n                isShow: false,\n                isShowConfirm: false,\n                isEdit: true,\n                movie: {},\n            }\n        };\n        this.handleShow = this.handleShow.bind(this);\n        this.handleShowConfirm = this.handleShowConfirm.bind(this);\n    }\n\n    componentDidMount(){\n        fetch('http://localhost:5000/movie/all')\n            .then(res => res.json())\n            .then(res => this.setState({movies: res.data}))\n    }\n\n    handleAction = (actionName, index) => {\n        let isEdit = true;\n        if (actionName === 'remove'){\n            isEdit = false;\n        }\n\n        this.setState({\n            status: {\n                isShow: !this.state.status.isShow,\n                isEdit: isEdit,\n                movie: this.state.movies[index]\n            }\n        })\n    }\n\n    handleShow = () => {\n        this.setState({\n            status: {\n                ...this.state.status,\n                isShow: !this.state.status.isShow\n            }\n        })\n    }\n\n    handleShowConfirm = () => {\n        this.setState({\n            status: {\n                ...this.state.status,\n                isShowConfirm: !this.state.status.isShowConfirm\n            }\n        })\n    }\n\n    updadteMovies = (movieId) => {\n        let moviesNew = [];\n        this.state.movies.forEach(function(item){\n            if (item._id !== movieId){\n                moviesNew.push(item);\n            }\n        })\n        console.log(moviesNew);\n        this.setState({movies: moviesNew});\n    }\n\n    handleConfirm = () => {\n        let action = this.state.status.isEdit ? 'update' : 'delete';\n        let movie_id = this.state.status.movie._id;\n        let action_url = `http://localhost:5000/movie/${action}/${movie_id}`;\n        fetch(action_url, {\n            headers: {'Content-Type':'application/json'},\n            method: this.state.status.isEdit ? 'POST' : 'DELETE'\n        })\n            .then(res => res.json())\n            .then(res => this.updadteMovies(res.data._id))\n        this.handleShow();\n    }\n\n    render(){\n        const tableHeader = this.props.headers.map((item)=>{\n            return(\n                <th>{item}</th>\n            )\n        });\n\n        const ActionModal = \n            <Modal show={this.state.status.isShow} onHide={this.handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <b variant=\"danger\">{this.state.status.isEdit ? 'Edit' : 'Delete'}</b> movie\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Row>\n                                <Col className='col-2'>\n                                    <Form.Label>Code</Form.Label>\n                                </Col>\n                                <Col>\n                                    <Form.Control type='label' value={this.state.status.movie._id}/>\n                                </Col>\n                            </Row>\n                        </Form.Group>\n                        {this.state.itemName.map((item)=>{\n                            return(\n                                <Form.Group>\n                                    <Row>\n                                        <Col className='col-2'>\n                                            <Form.Label>{item[0].toUpperCase() + item.substr(1,)}</Form.Label>\n                                        </Col>\n                                        <Col>\n                                            <Form.Control type='text' value={this.state.status.movie[item]}/>\n                                        </Col>\n                                    </Row>\n                                </Form.Group>\n                            )\n                        })}\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Row className=\"col-12\">\n                        <Col>\n                            <Button block variant=\"danger\" onClick={this.handleConfirm}>Confirm</Button>\n                        </Col>\n                        <Col>\n                            <Button block variant=\"primary\" onClick={this.handleShow}>Cancel</Button>\n                        </Col>\n                    </Row>\n                </Modal.Footer>\n            </Modal>\n\n        const ActionConfirm = \n            <Modal show={this.state.status.isShowConfirm} onHide={this.handleShowConfirm}>\n\n            </Modal>\n\n        const tableBody = this.state.movies.map((item, index)=>{\n            return(\n                <tr>\n                    <td>{index+1}</td>\n                    <td>{item.name}</td>\n                    <td>{item.rating}</td>\n                    <td>\n                        <Row>\n                            <Col>\n                                <Button block variant=\"primary\" size='sm' onClick={()=>this.handleAction('edit', index)}>Edit</Button>\n                            </Col>\n                            <Col>\n                                <Button block variant=\"danger\" size='sm' onClick={()=>this.handleAction('remove', index)}>Remove</Button>\n                            </Col>\n                        </Row>\n                    </td>\n                </tr>\n            )\n        });\n\n        return(\n            <Table responsive hover>\n                <thead>\n                    <tr>{tableHeader}</tr>\n                </thead>\n                <tbody>\n                    {tableBody}\n                    {ActionModal}\n                    {ActionConfirm}\n                </tbody>\n            </Table>\n        )\n    }\n}\n\nexport default ReadPage;"]},"metadata":{},"sourceType":"module"}